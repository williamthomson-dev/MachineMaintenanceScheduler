@using MachineMaintenanceScheduler.Shared.Modals
@using MachineMaintenanceScheduler.Shared.Layout
@using MachineMaintenanceScheduler.Shared.Services

@if (IsVisible)
{
    <Modal Title="@ToastType.ToString()"
           IsVisible="true"
           OnClose="OnClose">
        <ChildContent>
            <div class="alert @GetCssClass()">@Message</div>
        </ChildContent>

        <FooterContent>
            <button class="btn btn-secondary" @onclick="OnClose">Close</button>
        </FooterContent>
    </Modal>
}

@code {
    [Parameter] public bool IsVisible { get; set; } = false;
    [Parameter] public string Message { get; set; } = string.Empty;
    [Parameter] public ToastType ToastType { get; set; }

    [Inject] private IToastService _toastService { get; set; } = default!;

    protected override void OnInitialized()
    {
        _toastService.OnShow += Show;
    }

    private void Show(string lMessage, ToastType lToastType)
    {
        Message = lMessage;
        ToastType = lToastType;
        IsVisible = true;
        StateHasChanged();

    }

    private void OnClose() => IsVisible = false;

    
    private string GetCssClass() => ToastType switch
    {
        ToastType.Success => "alert-success",
        ToastType.Warning => "alert-warning",
        ToastType.Error => "alert-danger",
        _ => "alert-info"
    };
}
